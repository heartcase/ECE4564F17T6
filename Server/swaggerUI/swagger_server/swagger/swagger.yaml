---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Parking System"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/"
schemes:
- "http"
paths:
  /Login:
    get:
      summary: "Login into server"
      operationId: "login_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful Login"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Incorrect Password"
      security:
      - basicAuth: []
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /ParkingSpots:
    get:
      summary: "get the list of the parking spots"
      operationId: "parking_spots_get"
      parameters:
      - name: "range"
        in: "query"
        description: "show the list of parking spots by filter “all”/“available”"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful search"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ParkingSpot"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /ParkingSpots/{id}:
    get:
      summary: "check the status of the parking spot"
      operationId: "parking_spots_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "parking spot id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful finding"
          schema:
            $ref: "#/definitions/ParkingSpot"
        400:
          description: "Fail"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      summary: "park or leave the parking spot"
      description: "the user id"
      operationId: "parking_spots_id_post"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "id"
        in: "path"
        description: "parking spot id"
        required: true
        type: "integer"
      - name: "operation"
        in: "formData"
        description: "the operation the user want to act [\"check_in\", \"check_out\"\
          ]"
        required: true
        type: "string"
      - name: "park_hour"
        in: "formData"
        description: "the num of hour allow user to park [1-24]"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Successful CheckIn Or CheckOut"
        400:
          description: "Fail"
      security:
      - basicAuth: []
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /User/{uid}:
    get:
      summary: "check the status of the user"
      operationId: "user_uid_get"
      parameters:
      - name: "uid"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful search"
          schema:
            $ref: "#/definitions/User"
      security:
      - basicAuth: []
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
securityDefinitions:
  basicAuth:
    type: "basic"
definitions:
  ParkingSpot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "parking spot id unique for each"
      name:
        type: "string"
        description: "show the name of the parking spot"
      location:
        type: "string"
        description: "the position of the parking spot"
      status:
        type: "string"
      uid:
        type: "integer"
        format: "int32"
    example:
      name: "name"
      location: "location"
      id: 0
      full: true
  User:
    type: "object"
    properties:
      uid:
        type: "integer"
        format: "int32"
        description: "id of the user"
      name:
        type: "string"
        description: "name of the user"
      password:
        type: "string"
      status:
        type: "string"
        description: "if the user is parking"
      spot_id:
        type: "integer"
        format: "int32"
        description: "the id of parking spot"
      park_time:
        type: "string"
      park_hour:
        type: "integer"
        format: "int32"
    example:
      parking: "parking"
      uid: 0
      spot_id: 6
      name: "name"
